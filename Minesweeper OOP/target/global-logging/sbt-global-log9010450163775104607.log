[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\SYSTEM~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\SYSTEM~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 1.8.0_361)
[debug]       Load.loadUnit: plugins took 109.3632ms
[debug]       Load.loadUnit: defsScala took 0.6675ms
[debug] [Loading] Scanning directory C:\Users\System Manager\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\System Manager\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.086 ms
[debug]           Load.resolveProject(global-plugins) took 49.3377ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\System Manager\.sbt\1.0\plugins, plugins: List(<none>))) took 95.511ms
[debug] [Loading] Done in C:\Users\System Manager\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 221.5188ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3431ms
[debug]     Load.loadUnit(file:/C:/Users/System%20Manager/.sbt/1.0/plugins/, ...) took 347.6708ms
[debug]   Load.apply: load took 538.7627ms
[debug]   Load.apply: resolveProjects took 8.1198ms
[debug]   Load.apply: finalTransforms took 71.3742ms
[debug]   Load.apply: config.delegates took 11.6249ms
[debug]   Load.apply: Def.make(settings)... took 513.97ms
[debug]   Load.apply: structureIndex took 142.9822ms
[debug]   Load.apply: mkStreams took 4.852ms
[info] loading global plugins from C:\Users\System Manager\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3554.4979ms
[debug]           Load.loadUnit: plugins took 39.2793ms
[debug]           Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP\project
[debug]             Load.loadUnit: mkEval took 19.92ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3944 ms
[info] loading settings for project minesweeper-oop-build from idea.sbt ...
[debug]               Load.resolveProject(minesweeper-oop-build) took 15.195ms
[debug]             Load.loadTransitive: finalizeProject(Project(id minesweeper-oop-build, base: C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP\project, plugins: List(<none>))) took 20.7813ms
[debug] [Loading] Done in C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP\project, returning: (minesweeper-oop-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4589.7734ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.201ms
[debug]         Load.loadUnit(file:/C:/Users/System%20Manager/Dropbox/PC/Desktop/Minesweeper%20OOP/project/, ...) took 4640.0046ms
[debug]       Load.apply: load took 4643.2814ms
[debug]       Load.apply: resolveProjects took 0.1934ms
[debug]       Load.apply: finalTransforms took 20.4547ms
[debug]       Load.apply: config.delegates took 0.7713ms
[debug]       Load.apply: Def.make(settings)... took 152.4312ms
[debug]       Load.apply: structureIndex took 41.5928ms
[debug]       Load.apply: mkStreams took 0.0067ms
[info] loading project definition from C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7664.5282ms
[debug]     Load.loadUnit: defsScala took 0.0112ms
[debug] [Loading] Scanning directory C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP
[debug]       Load.loadUnit: mkEval took 0.6695ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.687 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 49.2199ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP, plugins: List(<none>))) took 62.104ms
[debug] [Loading] Done in C:\Users\System Manager\Dropbox\PC\Desktop\Minesweeper OOP, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1871.635ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.0838ms
[debug]   Load.loadUnit(file:/C:/Users/System%20Manager/Dropbox/PC/Desktop/Minesweeper%20OOP/, ...) took 9548.5594ms
[debug] Load.apply: load took 9551.2098ms
[debug] Load.apply: resolveProjects took 0.2235ms
[debug] Load.apply: finalTransforms took 47.621ms
[debug] Load.apply: config.delegates took 0.6399ms
[debug] Load.apply: Def.make(settings)... took 99.2623ms
[debug] Load.apply: structureIndex took 40.3719ms
[debug] Load.apply: mkStreams took 0.0153ms
[info] set current project to FinalScala (in build file:/C:/Users/System%20Manager/Dropbox/PC/Desktop/Minesweeper%20OOP/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59321 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59321, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FinalScala (in build file:/C:/Users/System%20Manager/Dropbox/PC/Desktop/Minesweeper%20OOP/)
[debug] > Exec(idea-shell, None, None)
